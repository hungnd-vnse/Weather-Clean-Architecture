plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jmailen.kotlinter'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
}
android {
    namespace 'com.example.weather'
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.example.weather"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 3
        versionName "0.2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def properties = new Properties()
        properties.load(rootProject.file("local.properties").newDataInputStream())

        buildConfigField("String", "OPENCAGE_API_KEY",
                "\"${properties.getProperty("OPENCAGE_API_KEY")}\"")
        buildConfigField("String", "OPENWEATHER_API_KEY",
                "\"${properties.getProperty("OPENWEATHER_API_KEY")}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$composeCompilerVersion"
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // Jetpack Compose
    implementation "androidx.activity:activity-compose:$activityComposeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-compose:$navigationVersion"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$uiControllerVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serializationJsonVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$serializationConverterVersion"
    implementation "io.coil-kt:coil-compose:$coilComposeVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$hiltAndroidXVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Location
    implementation "com.google.android.gms:play-services-location:$playServicesLocation"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    // Local Test
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "app.cash.turbine:turbine:$turbineVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

    // Android Test
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
}